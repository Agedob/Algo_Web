// chapter 1
    // 1) set my number to (input) set myName to (input) now swap the values and output 
    // 2) print -41 - 1001
    // 3) create a function(input) loop through input number
    // 4) write for loop for multiples of 3 from -300 - 0 !-3 || -6
    // 5) Use a while loop to print 0 100
    // 6) Given 2 numbers if they represent your birthday month and day in any combination log it. 
    // 7) Given an array and a value Y, count and print the number of array values greater than Y.
    // 8) Given an array, print the max, min and average values for that array.
    // 9) Given an array of numbers, create a function that returns a new array where negative values were replaced with the string ‘Dojo’.   For example, replaceNegatives( [1,2,-3,-5,5]) should return [1,2, "Dojo", "Dojo", 5].
    // 10) Given array, and indices start and end, remove vals in that index range, working in-place (hence shortening the array).  For example, removeVals([20,30,40,50,60,70],2,4) should return [20,30,70].
    // 11) Return the given array, after setting any negative values to zero.  For example resetNegatives( [1,2,-1, -3]) should return [1,2,0,0].
    // 12) Given an array, move all values forward by one index, dropping the first and leaving a ‘0’ value at the end.  For example moveForward( [1,2,3]) should return [2,3,0].
    // 13) Given an array, return an array with values in a reversed order.  For example, returnReversed([1,2,3]) should return [3,2,1].
    // 14) Create a function that changes a given array to list each original element twice, retaining original order.  Have the function return the new array.  For example repeatTwice( [4,”Ulysses”, 42, false] ) should return [4,4, “Ulysses”, “Ulysses”, 42, 42, false, false].





// DAILY CODE CHAL
    // Good morning! Here's your coding interview problem for today.
    // This problem was recently asked by Google.
    // Given a list of numbers and a number k, return whether any two numbers from the list add up to k.
    // For example, given [10, 15, 3, 7] and k of 17, return true since 10 + 7 is 17.
    // Bonus: Can you do this in one pass?


// https://binarysearch.com/problems/123-Number-Flip
    // You are given an integer n consisting of digits 1, 2, and 3 and you can flip one digit to a 3. Return the maximum number you can make.

